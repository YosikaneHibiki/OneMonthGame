//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Project/InputAction/CarAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CarAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CarAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CarAction"",
    ""maps"": [
        {
            ""name"": ""CarActionMap"",
            ""id"": ""03e9e656-50c5-481e-bbae-eeb161a11c32"",
            ""actions"": [
                {
                    ""name"": ""MoveAction"",
                    ""type"": ""Value"",
                    ""id"": ""cca6a2c0-458d-4fbf-857c-3c42f76a4633"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HandleAction"",
                    ""type"": ""Value"",
                    ""id"": ""bfbda2c2-9ca5-4d6e-bea3-c309a429fa1c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""9067d90b-0956-43aa-9b2b-dc047af7a91b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""gearUpAction"",
                    ""type"": ""Button"",
                    ""id"": ""3d14f37f-290a-48f6-9a11-e068054da0dc"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GearDownAction"",
                    ""type"": ""Button"",
                    ""id"": ""44f4e915-b71d-40d3-860f-040fe5c28944"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestSystemAction"",
                    ""type"": ""Button"",
                    ""id"": ""338f24a2-20c3-4f20-8da4-c59d8acc1c40"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetKey"",
                    ""type"": ""Button"",
                    ""id"": ""cfcb5803-8ac9-42b6-a49f-203bd189d384"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseButton"",
                    ""type"": ""Button"",
                    ""id"": ""8c9436c8-6fd3-41ee-bf53-d29852b4259c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2db1b991-bbcb-4ce7-97fe-59eb22383c70"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""15e2cdff-0df4-4368-b381-4de3113b722c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandleAction"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8d7855df-585e-4225-80d5-34df3f4f19eb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandleAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1b0add76-b10c-4c6b-84ae-02f4630803c0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandleAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d30e9d34-f5dc-4d10-82d9-f9fef9573307"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8661644f-586a-4f08-be06-fe125f7b03f3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""gearUpAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55360dae-c1ef-46fc-9e16-47aced187e4f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearDownAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36fd326a-d808-49a2-822d-bbb11503039b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TestSystemAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ec7b2ab-16c6-4d6d-976a-984f0587d4b9"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59fdaee3-6e50-47d6-9fc0-8d68497e14bc"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CarActionMap
        m_CarActionMap = asset.FindActionMap("CarActionMap", throwIfNotFound: true);
        m_CarActionMap_MoveAction = m_CarActionMap.FindAction("MoveAction", throwIfNotFound: true);
        m_CarActionMap_HandleAction = m_CarActionMap.FindAction("HandleAction", throwIfNotFound: true);
        m_CarActionMap_Brake = m_CarActionMap.FindAction("Brake", throwIfNotFound: true);
        m_CarActionMap_gearUpAction = m_CarActionMap.FindAction("gearUpAction", throwIfNotFound: true);
        m_CarActionMap_GearDownAction = m_CarActionMap.FindAction("GearDownAction", throwIfNotFound: true);
        m_CarActionMap_TestSystemAction = m_CarActionMap.FindAction("TestSystemAction", throwIfNotFound: true);
        m_CarActionMap_ResetKey = m_CarActionMap.FindAction("ResetKey", throwIfNotFound: true);
        m_CarActionMap_PauseButton = m_CarActionMap.FindAction("PauseButton", throwIfNotFound: true);
    }

    ~@CarAction()
    {
        UnityEngine.Debug.Assert(!m_CarActionMap.enabled, "This will cause a leak and performance issues, CarAction.CarActionMap.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CarActionMap
    private readonly InputActionMap m_CarActionMap;
    private List<ICarActionMapActions> m_CarActionMapActionsCallbackInterfaces = new List<ICarActionMapActions>();
    private readonly InputAction m_CarActionMap_MoveAction;
    private readonly InputAction m_CarActionMap_HandleAction;
    private readonly InputAction m_CarActionMap_Brake;
    private readonly InputAction m_CarActionMap_gearUpAction;
    private readonly InputAction m_CarActionMap_GearDownAction;
    private readonly InputAction m_CarActionMap_TestSystemAction;
    private readonly InputAction m_CarActionMap_ResetKey;
    private readonly InputAction m_CarActionMap_PauseButton;
    public struct CarActionMapActions
    {
        private @CarAction m_Wrapper;
        public CarActionMapActions(@CarAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveAction => m_Wrapper.m_CarActionMap_MoveAction;
        public InputAction @HandleAction => m_Wrapper.m_CarActionMap_HandleAction;
        public InputAction @Brake => m_Wrapper.m_CarActionMap_Brake;
        public InputAction @gearUpAction => m_Wrapper.m_CarActionMap_gearUpAction;
        public InputAction @GearDownAction => m_Wrapper.m_CarActionMap_GearDownAction;
        public InputAction @TestSystemAction => m_Wrapper.m_CarActionMap_TestSystemAction;
        public InputAction @ResetKey => m_Wrapper.m_CarActionMap_ResetKey;
        public InputAction @PauseButton => m_Wrapper.m_CarActionMap_PauseButton;
        public InputActionMap Get() { return m_Wrapper.m_CarActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CarActionMapActions set) { return set.Get(); }
        public void AddCallbacks(ICarActionMapActions instance)
        {
            if (instance == null || m_Wrapper.m_CarActionMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CarActionMapActionsCallbackInterfaces.Add(instance);
            @MoveAction.started += instance.OnMoveAction;
            @MoveAction.performed += instance.OnMoveAction;
            @MoveAction.canceled += instance.OnMoveAction;
            @HandleAction.started += instance.OnHandleAction;
            @HandleAction.performed += instance.OnHandleAction;
            @HandleAction.canceled += instance.OnHandleAction;
            @Brake.started += instance.OnBrake;
            @Brake.performed += instance.OnBrake;
            @Brake.canceled += instance.OnBrake;
            @gearUpAction.started += instance.OnGearUpAction;
            @gearUpAction.performed += instance.OnGearUpAction;
            @gearUpAction.canceled += instance.OnGearUpAction;
            @GearDownAction.started += instance.OnGearDownAction;
            @GearDownAction.performed += instance.OnGearDownAction;
            @GearDownAction.canceled += instance.OnGearDownAction;
            @TestSystemAction.started += instance.OnTestSystemAction;
            @TestSystemAction.performed += instance.OnTestSystemAction;
            @TestSystemAction.canceled += instance.OnTestSystemAction;
            @ResetKey.started += instance.OnResetKey;
            @ResetKey.performed += instance.OnResetKey;
            @ResetKey.canceled += instance.OnResetKey;
            @PauseButton.started += instance.OnPauseButton;
            @PauseButton.performed += instance.OnPauseButton;
            @PauseButton.canceled += instance.OnPauseButton;
        }

        private void UnregisterCallbacks(ICarActionMapActions instance)
        {
            @MoveAction.started -= instance.OnMoveAction;
            @MoveAction.performed -= instance.OnMoveAction;
            @MoveAction.canceled -= instance.OnMoveAction;
            @HandleAction.started -= instance.OnHandleAction;
            @HandleAction.performed -= instance.OnHandleAction;
            @HandleAction.canceled -= instance.OnHandleAction;
            @Brake.started -= instance.OnBrake;
            @Brake.performed -= instance.OnBrake;
            @Brake.canceled -= instance.OnBrake;
            @gearUpAction.started -= instance.OnGearUpAction;
            @gearUpAction.performed -= instance.OnGearUpAction;
            @gearUpAction.canceled -= instance.OnGearUpAction;
            @GearDownAction.started -= instance.OnGearDownAction;
            @GearDownAction.performed -= instance.OnGearDownAction;
            @GearDownAction.canceled -= instance.OnGearDownAction;
            @TestSystemAction.started -= instance.OnTestSystemAction;
            @TestSystemAction.performed -= instance.OnTestSystemAction;
            @TestSystemAction.canceled -= instance.OnTestSystemAction;
            @ResetKey.started -= instance.OnResetKey;
            @ResetKey.performed -= instance.OnResetKey;
            @ResetKey.canceled -= instance.OnResetKey;
            @PauseButton.started -= instance.OnPauseButton;
            @PauseButton.performed -= instance.OnPauseButton;
            @PauseButton.canceled -= instance.OnPauseButton;
        }

        public void RemoveCallbacks(ICarActionMapActions instance)
        {
            if (m_Wrapper.m_CarActionMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICarActionMapActions instance)
        {
            foreach (var item in m_Wrapper.m_CarActionMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CarActionMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CarActionMapActions @CarActionMap => new CarActionMapActions(this);
    public interface ICarActionMapActions
    {
        void OnMoveAction(InputAction.CallbackContext context);
        void OnHandleAction(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnGearUpAction(InputAction.CallbackContext context);
        void OnGearDownAction(InputAction.CallbackContext context);
        void OnTestSystemAction(InputAction.CallbackContext context);
        void OnResetKey(InputAction.CallbackContext context);
        void OnPauseButton(InputAction.CallbackContext context);
    }
}
